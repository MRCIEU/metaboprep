[{"path":"https://mrcieu.github.io/metaboprep/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 metaboprep authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mrcieu.github.io/metaboprep/articles/batch_normalise.html","id":"create-metaboprep-object","dir":"Articles","previous_headings":"","what":"Create Metaboprep object","title":"Batch Normalise","text":"","code":"library(metaboprep)  data     <- read.csv(system.file(\"extdata\", \"dummy_data.csv\", package = \"metaboprep\"), header=T, row.names = 1) |> as.matrix() samples  <- read.csv(system.file(\"extdata\", \"dummy_samples.csv\", package = \"metaboprep\"), header=T, row.names = 1) features <- read.csv(system.file(\"extdata\", \"dummy_features.csv\", package = \"metaboprep\"), header=T, row.names = 1)  m <- Metaboprep(data = data, samples = samples, features = features) m #> <metaboprep::Metaboprep> #>  @ data           : num [1:100, 1:20, 1] 0.755887 0.662386 0.444527 0.627146 0.000465 ... #>  .. - attr(*, \"dimnames\")=List of 3 #>  ..  ..$ : chr [1:100] \"id_100\" \"id_99\" \"id_98\" \"id_97\" ... #>  ..  ..$ : chr [1:20] \"metab_id_1\" \"metab_id_2\" \"metab_id_3\" \"metab_id_4\" ... #>  ..  ..$ : chr \"input\" #>  @ samples        :'data.frame': 100 obs. of  5 variables: #>  .. $ sample_id: chr  \"id_100\" \"id_99\" \"id_98\" \"id_97\" ... #>  .. $ age      : int  29 47 65 57 52 40 42 63 49 42 ... #>  .. $ sex      : chr  \"male\" \"male\" \"female\" \"female\" ... #>  .. $ pos      : chr  \"batch2\" \"batch1\" \"batch2\" \"batch1\" ... #>  .. $ neg      : chr  \"batch2\" \"batch2\" \"batch2\" \"batch1\" ... #>  @ features       :'data.frame': 20 obs. of  5 variables: #>  .. $ feature_id        : chr  \"metab_id_1\" \"metab_id_2\" \"metab_id_3\" \"metab_id_4\" ... #>  .. $ platform          : chr  \"neg\" \"neg\" \"neg\" \"pos\" ... #>  .. $ pathway           : logi  NA NA NA NA NA NA ... #>  .. $ derived_feature   : logi  TRUE FALSE FALSE FALSE FALSE FALSE ... #>  .. $ xenobiotic_feature: logi  FALSE FALSE FALSE FALSE FALSE FALSE ... #>  @ exclusions     :List of 2 #>  .. $ samples :List of 5 #>  ..  ..$ user_excluded                    : chr(0)  #>  ..  ..$ extreme_sample_missingness       : chr(0)  #>  ..  ..$ user_defined_sample_missingness  : chr(0)  #>  ..  ..$ user_defined_sample_totalpeakarea: chr(0)  #>  ..  ..$ user_defined_sample_pca_outlier  : chr(0)  #>  .. $ features:List of 3 #>  ..  ..$ user_excluded                   : chr(0)  #>  ..  ..$ extreme_feature_missingness     : chr(0)  #>  ..  ..$ user_defined_feature_missingness: chr(0)  #>  @ feature_summary: num[0 , 0 , 0 ]  #>  @ sample_summary : num[0 , 0 , 0 ]"},{"path":"https://mrcieu.github.io/metaboprep/articles/batch_normalise.html","id":"run-batch-normalisation","dir":"Articles","previous_headings":"","what":"Run batch normalisation","title":"Batch Normalise","text":"","code":"m <- m |>   batch_normalise(run_mode_col = \"platform\", run_mode_colmap = c(pos=\"pos\", neg=\"neg\")) |>   print() #> <metaboprep::Metaboprep> #>  @ data           : num [1:100, 1:20, 1:2] 0.755887 0.662386 0.444527 0.627146 0.000465 ... #>  .. - attr(*, \"dimnames\")=List of 3 #>  ..  ..$ : chr [1:100] \"id_100\" \"id_99\" \"id_98\" \"id_97\" ... #>  ..  ..$ : chr [1:20] \"metab_id_1\" \"metab_id_2\" \"metab_id_3\" \"metab_id_4\" ... #>  ..  ..$ : chr [1:2] \"input\" \"batch_normalised\" #>  @ samples        :'data.frame': 100 obs. of  5 variables: #>  .. $ sample_id: chr  \"id_100\" \"id_99\" \"id_98\" \"id_97\" ... #>  .. $ age      : int  29 47 65 57 52 40 42 63 49 42 ... #>  .. $ sex      : chr  \"male\" \"male\" \"female\" \"female\" ... #>  .. $ pos      : chr  \"batch2\" \"batch1\" \"batch2\" \"batch1\" ... #>  .. $ neg      : chr  \"batch2\" \"batch2\" \"batch2\" \"batch1\" ... #>  @ features       :'data.frame': 20 obs. of  5 variables: #>  .. $ feature_id        : chr  \"metab_id_1\" \"metab_id_2\" \"metab_id_3\" \"metab_id_4\" ... #>  .. $ platform          : chr  \"neg\" \"neg\" \"neg\" \"pos\" ... #>  .. $ pathway           : logi  NA NA NA NA NA NA ... #>  .. $ derived_feature   : logi  TRUE FALSE FALSE FALSE FALSE FALSE ... #>  .. $ xenobiotic_feature: logi  FALSE FALSE FALSE FALSE FALSE FALSE ... #>  @ exclusions     :List of 2 #>  .. $ samples :List of 5 #>  ..  ..$ user_excluded                    : chr(0)  #>  ..  ..$ extreme_sample_missingness       : chr(0)  #>  ..  ..$ user_defined_sample_missingness  : chr(0)  #>  ..  ..$ user_defined_sample_totalpeakarea: chr(0)  #>  ..  ..$ user_defined_sample_pca_outlier  : chr(0)  #>  .. $ features:List of 3 #>  ..  ..$ user_excluded                   : chr(0)  #>  ..  ..$ extreme_feature_missingness     : chr(0)  #>  ..  ..$ user_defined_feature_missingness: chr(0)  #>  @ feature_summary: num[0 , 0 , 0 ]  #>  @ sample_summary : num[0 , 0 , 0 ]"},{"path":"https://mrcieu.github.io/metaboprep/articles/batch_normalise.html","id":"accessing-data","dir":"Articles","previous_headings":"","what":"Accessing data","title":"Batch Normalise","text":"","code":"m@data[1:5, 1:5, \"input\"] #>          metab_id_1 metab_id_2 metab_id_3 metab_id_4 metab_id_5 #> id_100 0.7558872597 0.42346365  0.2830023  0.8074991 0.52739494 #> id_99  0.6623855066 0.94958532  0.4204349  0.1280644 0.86098936 #> id_98  0.4445273969 0.70903790  0.5872781  0.2507785 0.67355499 #> id_97  0.6271461844 0.41330541  0.8066944  0.3315470 0.01304103 #> id_96  0.0004653491 0.01836408  0.2019952  0.4072693 0.69319890 m@data[1:5, 1:5, \"batch_normalised\"] #>          metab_id_1 metab_id_2 metab_id_3 metab_id_4 metab_id_5 #> id_100 1.2219122932 0.85292184  0.5567470  2.0502351  0.9094521 #> id_99  1.0707641687 1.91261295  0.8271164  0.2650566  1.4847101 #> id_98  0.7185906152 1.42811293  1.1553450  0.6367251  1.1614939 #> id_97  1.3714905954 0.71888003  1.6124149  0.6862071  0.0243190 #> id_96  0.0007522494 0.03698813  0.3973827  0.8429306  1.1953683"},{"path":"https://mrcieu.github.io/metaboprep/articles/export.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Export Data","text":"Create Metaboprep object described Getting Started vignette.","code":"library(metaboprep)  data_file <- system.file(\"extdata\", \"metabolon_v1_example.xlsx\", package = \"metaboprep2\") dat       <- read_metabolon_v1(system.file(\"extdata\", \"metabolon_v1_example.xlsx\", package = \"metaboprep\")) m         <- Metaboprep(data = dat$data[,,1], samples = dat$samples, features = dat$features) m         <- quality_control(metaboprep = m) #>  #> ── Starting Metabolite QC Process ────────────────────────────────────────────── #> ℹ Validating input parameters #> ✔ Validating input parameters [8ms] #>  #> ℹ Sample & Feature Summary Statistics for raw data #> ✔ Sample & Feature Summary Statistics for raw data [976ms] #>  #> ℹ Copying input data to new 'qc' data layer #> ✔ Copying input data to new 'qc' data layer [26ms] #>  #> ℹ Assessing for extreme sample missingness >=80% - excluding 0 sample(s) #> ✔ Assessing for extreme sample missingness >=80% - excluding 0 sample(s) [16ms] #>  #> ℹ Assessing for extreme feature missingness >=80% - excluding 0 feature(s) #> ✔ Assessing for extreme feature missingness >=80% - excluding 0 feature(s) [21m… #>  #> ℹ Assessing for sample missingness at specified level of >=50% - excluding 0 sa… #> ✔ Assessing for sample missingness at specified level of >=50% - excluding 0 sa… #>  #> ℹ Assessing for feature missingness at specified level of >=50% - excluding 0 f… #> ✔ Assessing for feature missingness at specified level of >=50% - excluding 0 f… #>  #> ℹ Calculating total peak abundance outliers at +/- 5 Sdev - excluding 0 sample(… #> ✔ Calculating total peak abundance outliers at +/- 5 Sdev - excluding 0 sample(… #>  #> ℹ Running sample data PCA outlier analysis at +/- 5 Sdev #> ✔ Running sample data PCA outlier analysis at +/- 5 Sdev [17ms] #>  #> ℹ Sample PCA outlier analysis - re-identify feature independence and PC outlier… #> ✔ Sample PCA outlier analysis - re-identify feature independence and PC outlier… #>  #> ℹ Creating final QC dataset... #> ✔ Creating final QC dataset... [944ms] #>  #> ℹ Metabolite QC Process Completed #> ✔ Metabolite QC Process Completed [17ms] #>"},{"path":"https://mrcieu.github.io/metaboprep/articles/export.html","id":"export-metaboprep","dir":"Articles","previous_headings":"","what":"Export Metaboprep","title":"Export Data","text":"","code":"# where to put the files output_dir <- file.path(getwd(), \"output\")  # run export export(m, directory = output_dir, format = \"metaboprep\") #> Exporting in metaboprep format to /home/runner/work/metaboprep/metaboprep/vignettes/output  # view output directory files files <- list.files(output_dir, full.names = TRUE, recursive = TRUE) unname(sapply(files, function(path) {   parts <- strsplit(path, .Platform$file.sep)[[1]]   paste(tail(parts, 4), collapse = .Platform$file.sep) })) #>  [1] \"output/metaboprep_export_2025_06_26/input/config.yml\"          #>  [2] \"output/metaboprep_export_2025_06_26/input/data.tsv\"            #>  [3] \"output/metaboprep_export_2025_06_26/input/feature_summary.tsv\" #>  [4] \"output/metaboprep_export_2025_06_26/input/features.tsv\"        #>  [5] \"output/metaboprep_export_2025_06_26/input/sample_summary.tsv\"  #>  [6] \"output/metaboprep_export_2025_06_26/input/samples.tsv\"         #>  [7] \"output/metaboprep_export_2025_06_26/qc/config.yml\"             #>  [8] \"output/metaboprep_export_2025_06_26/qc/data.tsv\"               #>  [9] \"output/metaboprep_export_2025_06_26/qc/feature_summary.tsv\"    #> [10] \"output/metaboprep_export_2025_06_26/qc/feature_tree.RDS\"       #> [11] \"output/metaboprep_export_2025_06_26/qc/features.tsv\"           #> [12] \"output/metaboprep_export_2025_06_26/qc/sample_summary.tsv\"     #> [13] \"output/metaboprep_export_2025_06_26/qc/samples.tsv\"            #> [14] \"output/metaboprep_export_2025_06_26/qc/var_exp.tsv\""},{"path":"https://mrcieu.github.io/metaboprep/articles/feature_summary.html","id":"create-metaboprep-object","dir":"Articles","previous_headings":"","what":"Create Metaboprep object","title":"Feature summary","text":"","code":"library(metaboprep)  # import data data     <- read.csv(system.file(\"extdata\", \"dummy_data.csv\",     package = \"metaboprep\"), header=T, row.names = 1) |> as.matrix() samples  <- read.csv(system.file(\"extdata\", \"dummy_samples.csv\",  package = \"metaboprep\"), header=T, row.names = 1) features <- read.csv(system.file(\"extdata\", \"dummy_features.csv\", package = \"metaboprep\"), header=T, row.names = 1)  # create object m <- Metaboprep(data = data, samples = samples, features = features)  # print m #> <metaboprep::Metaboprep> #>  @ data           : num [1:100, 1:20, 1] 0.755887 0.662386 0.444527 0.627146 0.000465 ... #>  .. - attr(*, \"dimnames\")=List of 3 #>  ..  ..$ : chr [1:100] \"id_100\" \"id_99\" \"id_98\" \"id_97\" ... #>  ..  ..$ : chr [1:20] \"metab_id_1\" \"metab_id_2\" \"metab_id_3\" \"metab_id_4\" ... #>  ..  ..$ : chr \"input\" #>  @ samples        :'data.frame': 100 obs. of  5 variables: #>  .. $ sample_id: chr  \"id_100\" \"id_99\" \"id_98\" \"id_97\" ... #>  .. $ age      : int  29 47 65 57 52 40 42 63 49 42 ... #>  .. $ sex      : chr  \"male\" \"male\" \"female\" \"female\" ... #>  .. $ pos      : chr  \"batch2\" \"batch1\" \"batch2\" \"batch1\" ... #>  .. $ neg      : chr  \"batch2\" \"batch2\" \"batch2\" \"batch1\" ... #>  @ features       :'data.frame': 20 obs. of  5 variables: #>  .. $ feature_id        : chr  \"metab_id_1\" \"metab_id_2\" \"metab_id_3\" \"metab_id_4\" ... #>  .. $ platform          : chr  \"neg\" \"neg\" \"neg\" \"pos\" ... #>  .. $ pathway           : logi  NA NA NA NA NA NA ... #>  .. $ derived_feature   : logi  TRUE FALSE FALSE FALSE FALSE FALSE ... #>  .. $ xenobiotic_feature: logi  FALSE FALSE FALSE FALSE FALSE FALSE ... #>  @ exclusions     :List of 2 #>  .. $ samples :List of 5 #>  ..  ..$ user_excluded                    : chr(0)  #>  ..  ..$ extreme_sample_missingness       : chr(0)  #>  ..  ..$ user_defined_sample_missingness  : chr(0)  #>  ..  ..$ user_defined_sample_totalpeakarea: chr(0)  #>  ..  ..$ user_defined_sample_pca_outlier  : chr(0)  #>  .. $ features:List of 3 #>  ..  ..$ user_excluded                   : chr(0)  #>  ..  ..$ extreme_feature_missingness     : chr(0)  #>  ..  ..$ user_defined_feature_missingness: chr(0)  #>  @ feature_summary: num[0 , 0 , 0 ]  #>  @ sample_summary : num[0 , 0 , 0 ]"},{"path":"https://mrcieu.github.io/metaboprep/articles/feature_summary.html","id":"run-feature-summary","dir":"Articles","previous_headings":"","what":"Run feature summary","title":"Feature summary","text":"","code":"feature_summ <- feature_summary(metaboprep      = m,                                  source_layer    = \"input\",                                  outlier_udist   = 1.0,                                 tree_cut_height = 0.5,                                 output          = \"data.frame\")"},{"path":"https://mrcieu.github.io/metaboprep/articles/feature_summary.html","id":"feature-summary-attributes","dir":"Articles","previous_headings":"","what":"Feature summary attributes","title":"Feature summary","text":"addition summary data, hierarchical cluster dendrogram appended returned data.frame attribute. can accessed attribute name: [source_layer]_tree, case summarised input data, therefore attribute name input_tree.","code":"suppressPackageStartupMessages(library(dendextend)) library(ggplot2)  # extract tree from attributes tree <- attr(feature_summ, 'input_tree') dend <- stats::as.dendrogram(tree)  # color the independent features blue metab_color       <- feature_summ[, c(\"feature_id\", \"independent_features\")] metab_color       <- metab_color[match(labels(dend), metab_color$feature_id), ] metab_color$color <- ifelse(metab_color$independent_features==TRUE, \"blue\", \"black\")  # format dendrogram for ploting dend <- dend |>   dendextend::set(\"labels_cex\", 0.5) |>   dendextend::set(\"labels_col\", metab_color$color) |>   dendextend::set(\"branches_lwd\", 0.5) |>   dendextend::set(\"branches_k_color\",  value = metab_color$color)  # plot ggplot(dend, horiz = TRUE) +    geom_hline(yintercept = 0.5, color = \"coral2\")"},{"path":"https://mrcieu.github.io/metaboprep/articles/feature_summary.html","id":"run-feature-summary-on-subset","dir":"Articles","previous_headings":"","what":"Run feature summary on subset","title":"Feature summary","text":"Using sample_ids feature_ids arguments can run summary subset data. Note: rows return, however summary data returned specified ids.","code":"feature_summ <- feature_summary(metaboprep      = m,                                  source_layer    = \"input\",                                  outlier_udist   = 1.0,                                 tree_cut_height = 0.5,                                 sample_ids      = c(\"id_96\", \"id_97\", \"id_98\", \"id_99\", \"id_100\"),                                 feature_ids     = c(\"metab_id_1\", \"metab_id_2\", \"metab_id_3\"),                                 output          = \"data.frame\")"},{"path":"https://mrcieu.github.io/metaboprep/articles/feature_summary.html","id":"run-sample-feature-summaries-together","dir":"Articles","previous_headings":"","what":"Run sample & feature summaries together","title":"Feature summary","text":"","code":"summ <- summarise(metaboprep      = m,                    source_layer    = \"input\",                    outlier_udist   = 1.0,                   tree_cut_height = 0.5,                   output          = \"data.frame\")  str(summ) #> List of 2 #>  $ sample_summary :'data.frame': 100 obs. of  24 variables: #>   ..$ sample_id            : chr [1:100] \"id_100\" \"id_99\" \"id_98\" \"id_97\" ... #>   ..$ missingness          : num [1:100] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ tpa_total            : num [1:100] 38.7 39.5 45.1 37.3 31.5 ... #>   ..$ tpa_complete_features: num [1:100] 38.7 39.5 45.1 37.3 31.5 ... #>   ..$ outlier_count        : num [1:100] 0 0 1 2 3 2 0 0 0 2 ... #>   ..$ pc1                  : num [1:100] 1.087 0.418 -2.249 -0.619 2.231 ... #>   ..$ pc2                  : num [1:100] 0.321 0.573 0.131 0.749 -0.181 ... #>   ..$ pc3                  : num [1:100] 0.00338 1.58112 0.04016 0.5436 -0.9382 ... #>   ..$ pc4                  : num [1:100] 0.4766 0.1105 -0.6054 1.9563 0.0382 ... #>   ..$ pc5                  : num [1:100] 0.837 -1.154 -0.72 -1.659 -0.776 ... #>   ..$ pc6                  : num [1:100] 0.256 -0.256 0.763 -0.174 2.453 ... #>   ..$ pc7                  : num [1:100] -0.162 -0.103 -0.614 -0.669 1.494 ... #>   ..$ pc8                  : num [1:100] -0.2756 0.1153 0.0756 -2.1717 1.0719 ... #>   ..$ pc9                  : num [1:100] 0.577 1.961 -0.521 -0.463 0.236 ... #>   ..$ pc10                 : num [1:100] -1.466 -1.201 -1.457 1.769 0.349 ... #>   ..$ pc1_3_sd_outlier     : num [1:100] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ pc2_3_sd_outlier     : num [1:100] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ pc3_3_sd_outlier     : num [1:100] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ pc1_4_sd_outlier     : num [1:100] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ pc2_4_sd_outlier     : num [1:100] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ pc3_4_sd_outlier     : num [1:100] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ pc1_5_sd_outlier     : num [1:100] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ pc2_5_sd_outlier     : num [1:100] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ pc3_5_sd_outlier     : num [1:100] 0 0 0 0 0 0 0 0 0 0 ... #>   ..- attr(*, \"input_varexp\")= Named num [1:20] 0.0996 0.0884 0.0795 0.0691 0.0669 ... #>   .. ..- attr(*, \"names\")= chr [1:20] \"PC1\" \"PC2\" \"PC3\" \"PC4\" ... #>   ..- attr(*, \"input_num_pcs_scree\")= num 3 #>   ..- attr(*, \"input_num_pcs_parallel\")= int 14 #>   ..- attr(*, \"input_outlier_udist\")= num 1 #>  $ feature_summary:'data.frame': 20 obs. of  21 variables: #>   ..$ feature_id          : chr [1:20] \"metab_id_1\" \"metab_id_2\" \"metab_id_3\" \"metab_id_4\" ... #>   ..$ missingness         : num [1:20] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ outlier_count       : num [1:20] 5 0 10 5 11 7 7 0 10 0 ... #>   ..$ n                   : num [1:20] 100 100 100 100 100 100 100 100 100 100 ... #>   ..$ mean                : num [1:20] 0.511 0.521 0.488 0.464 0.521 ... #>   ..$ sd                  : num [1:20] 0.293 0.31 0.283 0.286 0.293 ... #>   ..$ median              : num [1:20] 0.53 0.547 0.504 0.466 0.547 ... #>   ..$ min                 : num [1:20] 0.000465 0.018364 0.001192 0.004107 0.003896 ... #>   ..$ max                 : num [1:20] 0.993 0.993 0.995 0.992 0.976 ... #>   ..$ range               : num [1:20] 0.992 0.975 0.994 0.988 0.972 ... #>   ..$ skew                : num [1:20] -0.123 -0.1496 -0.0365 0.0924 -0.2185 ... #>   ..$ kurtosis            : num [1:20] -1.23 -1.4 -1.11 -1.2 -1.16 ... #>   ..$ se                  : num [1:20] 0.0293 0.031 0.0283 0.0286 0.0293 ... #>   ..$ missing             : num [1:20] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ var                 : num [1:20] 0.0859 0.0959 0.0804 0.0819 0.0856 ... #>   ..$ disp_index          : num [1:20] 0.168 0.184 0.165 0.177 0.164 ... #>   ..$ coef_variance       : num [1:20] 0.574 0.594 0.58 0.617 0.561 ... #>   ..$ W                   : num [1:20] 0.949 0.924 0.963 0.954 0.945 ... #>   ..$ log10_W             : num [1:20] 0.744 0.834 0.749 0.833 0.782 ... #>   ..$ k                   : int [1:20] 1 2 3 4 5 6 7 8 9 10 ... #>   ..$ independent_features: logi [1:20] TRUE TRUE TRUE TRUE TRUE TRUE ... #>   ..- attr(*, \"input_tree\")=List of 7 #>   .. ..$ merge      : int [1:19, 1:2] -11 -2 -3 -13 -10 -8 -4 -12 -9 -1 ... #>   .. ..$ height     : num [1:19] 0.672 0.723 0.764 0.771 0.774 ... #>   .. ..$ order      : int [1:20] 3 6 4 5 8 15 10 19 7 1 ... #>   .. ..$ labels     : chr [1:20] \"metab_id_1\" \"metab_id_2\" \"metab_id_3\" \"metab_id_4\" ... #>   .. ..$ method     : chr \"complete\" #>   .. ..$ call       : language stats::hclust(d = dist_matrix, method = \"complete\") #>   .. ..$ dist.method: NULL #>   .. ..- attr(*, \"class\")= chr \"hclust\" #>   ..- attr(*, \"input_outlier_udist\")= num 1 #>   ..- attr(*, \"input_tree_cut_height\")= num 0.5"},{"path":"https://mrcieu.github.io/metaboprep/articles/olink.html","id":"import-olink-data","dir":"Articles","previous_headings":"","what":"Import Olink data","title":"Import Olink Proteomic Data","text":"","code":"library(metaboprep)  # the example Olink data file path olink_file <- system.file(\"extdata\", \"olink_v1_example.txt\", package=\"metaboprep\")  # read data  dat <- read_olink_v1(olink_file)"},{"path":"https://mrcieu.github.io/metaboprep/articles/olink.html","id":"create-metaboprep-object","dir":"Articles","previous_headings":"","what":"Create Metaboprep object","title":"Import Olink Proteomic Data","text":"imported, pass data Metaboprep class object.","code":"m <- Metaboprep(data     = dat$data,                  features = dat$features,                  samples  = dat$samples)  # view  m #> <metaboprep::Metaboprep> #>  @ data           : num [1:90, 1:100, 1] 8.32 6.12 9.74 5.11 7.96 5.89 6.06 5.62 6.51 8.46 ... #>  .. - attr(*, \"dimnames\")=List of 3 #>  ..  ..$ : chr [1:90] \"Sample_00001\" \"Sample_00002\" \"Sample_00003\" \"Sample_00004\" ... #>  ..  ..$ : chr [1:100] \"OID00001\" \"OID00002\" \"OID00003\" \"OID00004\" ... #>  ..  ..$ : chr \"input\" #>  @ samples        :'data.frame': 90 obs. of  3 variables: #>  .. $ sample_id : chr  \"Sample_00001\" \"Sample_00002\" \"Sample_00003\" \"Sample_00004\" ... #>  .. $ PlateID   : chr  \"20211440-001_SP211650_IMO\" \"20211440-001_SP211650_IMO\" \"20211440-001_SP211650_IMO\" \"20211440-001_SP211650_IMO\" ... #>  .. $ QC_Warning: chr  \"Pass\" \"Pass\" \"Warning\" \"Pass\" ... #>  @ features       :'data.frame': 100 obs. of  8 variables: #>  .. $ feature_id   : chr  \"OID00001\" \"OID00002\" \"OID00003\" \"OID00004\" ... #>  .. $ UniProt      : chr  \"P60800\" \"P69237\" \"P79933\" \"P90793\" ... #>  .. $ Assay        : chr  \"Protein_1\" \"Protein_2\" \"Protein_3\" \"Protein_4\" ... #>  .. $ MissingFreq  : num  0.00147 0.00147 0.00147 0.00147 0.00147 0.00147 0.00147 0.00147 0.00147 0.00147 ... #>  .. $ Panel        : chr  \"Olink Immuno-Oncology\" \"Olink Immuno-Oncology\" \"Olink Immuno-Oncology\" \"Olink Immuno-Oncology\" ... #>  .. $ Panel_Version: chr  \"v.3112\" \"v.3112\" \"v.3112\" \"v.3112\" ... #>  .. $ LOD          : num  2.14 2.14 2.14 2.14 2.14 2.14 2.14 2.14 2.14 2.14 ... #>  .. $ Normalization: chr  \"Intensity Normalized (v.2)\" \"Intensity Normalized (v.2)\" \"Intensity Normalized (v.2)\" \"Intensity Normalized (v.2)\" ... #>  @ exclusions     :List of 2 #>  .. $ samples :List of 5 #>  ..  ..$ user_excluded                    : chr(0)  #>  ..  ..$ extreme_sample_missingness       : chr(0)  #>  ..  ..$ user_defined_sample_missingness  : chr(0)  #>  ..  ..$ user_defined_sample_totalpeakarea: chr(0)  #>  ..  ..$ user_defined_sample_pca_outlier  : chr(0)  #>  .. $ features:List of 3 #>  ..  ..$ user_excluded                   : chr(0)  #>  ..  ..$ extreme_feature_missingness     : chr(0)  #>  ..  ..$ user_defined_feature_missingness: chr(0)  #>  @ feature_summary: num[0 , 0 , 0 ]  #>  @ sample_summary : num[0 , 0 , 0 ]"},{"path":"https://mrcieu.github.io/metaboprep/articles/olink.html","id":"qc-olink","dir":"Articles","previous_headings":"","what":"QC Olink","title":"Import Olink Proteomic Data","text":"","code":"m <- m |>   quality_control(source_layer        = \"input\",                    sample_missingness  = 0.5,                    feature_missingness = 0.3,                    total_peak_area_sd  = 5,                    outlier_udist       = 5,                    outlier_treatment   = \"leave_be\",                    winsorize_quantile  = 1.0,                    tree_cut_height     = 0.5,                    pc_outlier_sd       = 5) #>  #> ── Starting Metabolite QC Process ────────────────────────────────────────────── #> ℹ Validating input parameters #> ✔ Validating input parameters [8ms] #>  #> ℹ Sample & Feature Summary Statistics for raw data #> ✔ Sample & Feature Summary Statistics for raw data [1s] #>  #> ℹ Copying input data to new 'qc' data layer #> ✔ Copying input data to new 'qc' data layer [22ms] #>  #> ℹ Assessing for extreme sample missingness >=80% - excluding 0 sample(s) #> ✔ Assessing for extreme sample missingness >=80% - excluding 0 sample(s) [16ms] #>  #> ℹ Assessing for extreme feature missingness >=80% - excluding 0 feature(s) #> ✔ Assessing for extreme feature missingness >=80% - excluding 0 feature(s) [20m… #>  #> ℹ Assessing for sample missingness at specified level of >=50% - excluding 0 sa… #> ✔ Assessing for sample missingness at specified level of >=50% - excluding 0 sa… #>  #> ℹ Assessing for feature missingness at specified level of >=30% - excluding 0 f… #> ✔ Assessing for feature missingness at specified level of >=30% - excluding 0 f… #>  #> ℹ Calculating total peak abundance outliers at +/- 5 Sdev - excluding 0 sample(… #> ✔ Calculating total peak abundance outliers at +/- 5 Sdev - excluding 0 sample(… #>  #> ℹ Running sample data PCA outlier analysis at +/- 5 Sdev #> ✔ Running sample data PCA outlier analysis at +/- 5 Sdev [17ms] #>  #> ℹ Sample PCA outlier analysis - re-identify feature independence and PC outlier… #> ℹ Sample PCA outlier analysis - re-identify feature independence and PC outlier… #> ✔ Sample PCA outlier analysis - re-identify feature independence and PC outlier… #>  #> ℹ Creating final QC dataset... #> ✔ Creating final QC dataset... [1.1s] #>  #> ℹ Metabolite QC Process Completed #> ✔ Metabolite QC Process Completed [14ms] #>   # view  m #> <metaboprep::Metaboprep> #>  @ data           : num [1:90, 1:100, 1:2] 8.32 6.12 9.74 5.11 7.96 5.89 6.06 5.62 6.51 8.46 ... #>  .. - attr(*, \"dimnames\")=List of 3 #>  ..  ..$ : chr [1:90] \"Sample_00001\" \"Sample_00002\" \"Sample_00003\" \"Sample_00004\" ... #>  ..  ..$ : chr [1:100] \"OID00001\" \"OID00002\" \"OID00003\" \"OID00004\" ... #>  ..  ..$ : chr [1:2] \"input\" \"qc\" #>  .. - attr(*, \"qc_sample_missingness\")= num 0.5 #>  .. - attr(*, \"qc_feature_missingness\")= num 0.3 #>  .. - attr(*, \"qc_total_peak_area_sd\")= num 5 #>  .. - attr(*, \"qc_outlier_udist\")= num 5 #>  .. - attr(*, \"qc_outlier_treatment\")= chr \"leave_be\" #>  .. - attr(*, \"qc_winsorize_quantile\")= num 1 #>  .. - attr(*, \"qc_tree_cut_height\")= num 0.5 #>  .. - attr(*, \"qc_pc_outlier_sd\")= num 5 #>  .. - attr(*, \"qc_features_exclude_but_keep\")= chr(0)  #>  @ samples        :'data.frame': 90 obs. of  5 variables: #>  .. $ sample_id      : chr  \"Sample_00001\" \"Sample_00002\" \"Sample_00003\" \"Sample_00004\" ... #>  .. $ PlateID        : chr  \"20211440-001_SP211650_IMO\" \"20211440-001_SP211650_IMO\" \"20211440-001_SP211650_IMO\" \"20211440-001_SP211650_IMO\" ... #>  .. $ QC_Warning     : chr  \"Pass\" \"Pass\" \"Warning\" \"Pass\" ... #>  .. $ reason_excluded: chr  NA NA NA NA ... #>  .. $ excluded       : logi  FALSE FALSE FALSE FALSE FALSE FALSE ... #>  @ features       :'data.frame': 100 obs. of  10 variables: #>  .. $ feature_id     : chr  \"OID00001\" \"OID00002\" \"OID00003\" \"OID00004\" ... #>  .. $ UniProt        : chr  \"P60800\" \"P69237\" \"P79933\" \"P90793\" ... #>  .. $ Assay          : chr  \"Protein_1\" \"Protein_2\" \"Protein_3\" \"Protein_4\" ... #>  .. $ MissingFreq    : num  0.00147 0.00147 0.00147 0.00147 0.00147 0.00147 0.00147 0.00147 0.00147 0.00147 ... #>  .. $ Panel          : chr  \"Olink Immuno-Oncology\" \"Olink Immuno-Oncology\" \"Olink Immuno-Oncology\" \"Olink Immuno-Oncology\" ... #>  .. $ Panel_Version  : chr  \"v.3112\" \"v.3112\" \"v.3112\" \"v.3112\" ... #>  .. $ LOD            : num  2.14 2.14 2.14 2.14 2.14 2.14 2.14 2.14 2.14 2.14 ... #>  .. $ Normalization  : chr  \"Intensity Normalized (v.2)\" \"Intensity Normalized (v.2)\" \"Intensity Normalized (v.2)\" \"Intensity Normalized (v.2)\" ... #>  .. $ reason_excluded: chr  NA NA NA NA ... #>  .. $ excluded       : logi  FALSE FALSE FALSE FALSE FALSE FALSE ... #>  @ exclusions     :List of 2 #>  .. $ samples :List of 5 #>  ..  ..$ user_excluded                    : chr(0)  #>  ..  ..$ extreme_sample_missingness       : chr(0)  #>  ..  ..$ user_defined_sample_missingness  : chr(0)  #>  ..  ..$ user_defined_sample_totalpeakarea: chr(0)  #>  ..  ..$ user_defined_sample_pca_outlier  : chr(0)  #>  .. $ features:List of 3 #>  ..  ..$ user_excluded                   : chr(0)  #>  ..  ..$ extreme_feature_missingness     : chr(0)  #>  ..  ..$ user_defined_feature_missingness: chr(0)  #>  @ feature_summary: num [1:20, 1:100, 1:2] 0 0 90 7.42 1.48 ... #>  .. - attr(*, \"dimnames\")=List of 3 #>  ..  ..$ : chr [1:20] \"missingness\" \"outlier_count\" \"n\" \"mean\" ... #>  ..  ..$ : chr [1:100] \"OID00001\" \"OID00002\" \"OID00003\" \"OID00004\" ... #>  ..  ..$ : chr [1:2] \"input\" \"qc\" #>  .. - attr(*, \"qc_tree\")=List of 7 #>  ..  ..$ merge      : int [1:99, 1:2] -16 -73 -36 -38 -19 -35 -18 -13 -20 -69 ... #>  ..  ..$ height     : num [1:99] 0.54 0.613 0.629 0.634 0.647 ... #>  ..  ..$ order      : int [1:100] 39 41 55 62 6 22 44 77 54 76 ... #>  ..  ..$ labels     : chr [1:100] \"OID00001\" \"OID00002\" \"OID00003\" \"OID00004\" ... #>  ..  ..$ method     : chr \"complete\" #>  ..  ..$ call       : language stats::hclust(d = dist_matrix, method = \"complete\") #>  ..  ..$ dist.method: NULL #>  ..  ..- attr(*, \"class\")= chr \"hclust\" #>  .. - attr(*, \"qc_outlier_udist\")= num 5 #>  .. - attr(*, \"qc_tree_cut_height\")= num 0.5 #>  @ sample_summary : num [1:90, 1:65, 1:2] 0 0 0 0 0 0 0 0 0 0 ... #>  .. - attr(*, \"dimnames\")=List of 3 #>  ..  ..$ : chr [1:90] \"Sample_00001\" \"Sample_00002\" \"Sample_00003\" \"Sample_00004\" ... #>  ..  ..$ : chr [1:65] \"missingness\" \"tpa_total\" \"tpa_complete_features\" \"outlier_count\" ... #>  ..  ..$ : chr [1:2] \"input\" \"qc\" #>  .. - attr(*, \"qc_varexp\")= Named num [1:90] 0.0399 0.0386 0.0365 0.035 0.0328 ... #>  ..  ..- attr(*, \"names\")= chr [1:90] \"PC1\" \"PC2\" \"PC3\" \"PC4\" ... #>  .. - attr(*, \"qc_num_pcs_scree\")= num 17 #>  .. - attr(*, \"qc_num_pcs_parallel\")= int 39 #>  .. - attr(*, \"qc_outlier_udist\")= num 5"},{"path":"https://mrcieu.github.io/metaboprep/articles/olink.html","id":"other","dir":"Articles","previous_headings":"","what":"Other","title":"Import Olink Proteomic Data","text":"Olink specific analyses include…","code":""},{"path":"https://mrcieu.github.io/metaboprep/articles/sample_summary.html","id":"create-metaboprep-object","dir":"Articles","previous_headings":"","what":"Create Metaboprep object","title":"Sample summary","text":"","code":"library(metaboprep)  # import data data     <- read.csv(system.file(\"extdata\", \"dummy_data.csv\",     package = \"metaboprep\"), header=T, row.names = 1) |> as.matrix() samples  <- read.csv(system.file(\"extdata\", \"dummy_samples.csv\",  package = \"metaboprep\"), header=T, row.names = 1) features <- read.csv(system.file(\"extdata\", \"dummy_features.csv\", package = \"metaboprep\"), header=T, row.names = 1)  # create object m <- Metaboprep(data = data, samples = samples, features = features)  # print m #> <metaboprep::Metaboprep> #>  @ data           : num [1:100, 1:20, 1] 0.755887 0.662386 0.444527 0.627146 0.000465 ... #>  .. - attr(*, \"dimnames\")=List of 3 #>  ..  ..$ : chr [1:100] \"id_100\" \"id_99\" \"id_98\" \"id_97\" ... #>  ..  ..$ : chr [1:20] \"metab_id_1\" \"metab_id_2\" \"metab_id_3\" \"metab_id_4\" ... #>  ..  ..$ : chr \"input\" #>  @ samples        :'data.frame': 100 obs. of  5 variables: #>  .. $ sample_id: chr  \"id_100\" \"id_99\" \"id_98\" \"id_97\" ... #>  .. $ age      : int  29 47 65 57 52 40 42 63 49 42 ... #>  .. $ sex      : chr  \"male\" \"male\" \"female\" \"female\" ... #>  .. $ pos      : chr  \"batch2\" \"batch1\" \"batch2\" \"batch1\" ... #>  .. $ neg      : chr  \"batch2\" \"batch2\" \"batch2\" \"batch1\" ... #>  @ features       :'data.frame': 20 obs. of  5 variables: #>  .. $ feature_id        : chr  \"metab_id_1\" \"metab_id_2\" \"metab_id_3\" \"metab_id_4\" ... #>  .. $ platform          : chr  \"neg\" \"neg\" \"neg\" \"pos\" ... #>  .. $ pathway           : logi  NA NA NA NA NA NA ... #>  .. $ derived_feature   : logi  TRUE FALSE FALSE FALSE FALSE FALSE ... #>  .. $ xenobiotic_feature: logi  FALSE FALSE FALSE FALSE FALSE FALSE ... #>  @ exclusions     :List of 2 #>  .. $ samples :List of 5 #>  ..  ..$ user_excluded                    : chr(0)  #>  ..  ..$ extreme_sample_missingness       : chr(0)  #>  ..  ..$ user_defined_sample_missingness  : chr(0)  #>  ..  ..$ user_defined_sample_totalpeakarea: chr(0)  #>  ..  ..$ user_defined_sample_pca_outlier  : chr(0)  #>  .. $ features:List of 3 #>  ..  ..$ user_excluded                   : chr(0)  #>  ..  ..$ extreme_feature_missingness     : chr(0)  #>  ..  ..$ user_defined_feature_missingness: chr(0)  #>  @ feature_summary: num[0 , 0 , 0 ]  #>  @ sample_summary : num[0 , 0 , 0 ]"},{"path":"https://mrcieu.github.io/metaboprep/articles/sample_summary.html","id":"run-sample-summary","dir":"Articles","previous_headings":"","what":"Run sample summary","title":"Sample summary","text":"","code":"sample_summ <- sample_summary(metaboprep    = m,                                source_layer  = \"input\",                                outlier_udist = 1.0,                                output        = \"data.frame\")"},{"path":"https://mrcieu.github.io/metaboprep/articles/sample_summary.html","id":"run-sample-summary-on-subset","dir":"Articles","previous_headings":"","what":"Run sample summary on subset","title":"Sample summary","text":"Using sample_ids feature_ids arguments can run summary subset data. Note: rows return, however summary data returned specified ids.","code":"sample_summ <- sample_summary(metaboprep    = m,                                source_layer  = \"input\",                                outlier_udist = 1.0,                               sample_ids    = c(\"id_96\", \"id_97\", \"id_98\", \"id_99\", \"id_100\"),                               feature_ids   = c(\"metab_id_1\", \"metab_id_2\", \"metab_id_3\"),                               output        = \"data.frame\")"},{"path":"https://mrcieu.github.io/metaboprep/articles/sample_summary.html","id":"run-pca-analysis","dir":"Articles","previous_headings":"","what":"Run PCA analysis","title":"Sample summary","text":"pc_and_outliers() performs principal component analysis. Missing data imputed median used identify number informative ‘significant’ PCs (1) acceleration analysis, (2) parallel analysis. Finally number sample outliers determined 3, 4, 5 standard deviations mean top PCs determined acceleration factor analysis.","code":"pc_analysis <- pc_and_outliers(metaboprep      = m,                                 source_layer    = \"input\")"},{"path":"https://mrcieu.github.io/metaboprep/articles/sample_summary.html","id":"additional-attributes","dir":"Articles","previous_headings":"","what":"Additional attributes","title":"Sample summary","text":"addition, variance explained vector appended returned data.frame attribute. can accessed attribute name: [source_layer]_varexp, case used input data, therefore attribute name input_varexp. similar way, results acceleration analysis (input_num_pcs_scree) parallel analysis (input_num_pcs_parallel) can also extracted.","code":"library(ggplot2)  # extract varexp from attributes varexp <- attr(pc_analysis, 'input_varexp')  # subset to top 100 for nicer plotting if (length(varexp) > 100) varexp <- varexp[1:100]  # get acceleration and parallel analysis results af <- attr(pc_analysis, 'input_num_pcs_scree') np <- attr(pc_analysis, 'input_num_pcs_parallel') if (af==np) np <- np+0.1 # make line visible if equal  # as data.frame x_labs <- sub(\"(?i)pc\",\"\", names(varexp)) ve     <- data.frame(\"pc\"      = factor(x_labs, levels=x_labs),                      \"var_exp\" = varexp) lines  <- data.frame(\"Analysis\" = c(\"Acceleration\", \"Parallel\"),                       \"pc\"       = c(af, np))     # plot ggplot(ve, aes(x = pc, y = var_exp)) +   geom_line(color = \"grey\") +   geom_point(shape = 21, fill = \"#377EB8\", size = 2) +   geom_vline(data = lines, aes(xintercept = pc, color = Analysis), inherit.aes = FALSE) +   scale_color_manual(values = c(\"Acceleration\"=\"#E41A1C\", \"Parallel\"=\"#4DAF4A\")) +   scale_x_discrete(labels = function(x) ifelse(seq_along(x) %% 10 == 0 | x==1, x, \"\")) +   labs(x = \"PC\", y = \"Variance explained\") +   theme_classic() +   theme(legend.position = \"top\")"},{"path":"https://mrcieu.github.io/metaboprep/articles/sample_summary.html","id":"run-sample-feature-summaries-together","dir":"Articles","previous_headings":"","what":"Run sample & feature summaries together","title":"Sample summary","text":"","code":"summ <- summarise(metaboprep      = m,                    source_layer    = \"input\",                    outlier_udist   = 1.0,                   tree_cut_height = 0.5,                   output          = \"data.frame\")  str(summ) #> List of 2 #>  $ sample_summary :'data.frame': 100 obs. of  24 variables: #>   ..$ sample_id            : chr [1:100] \"id_100\" \"id_99\" \"id_98\" \"id_97\" ... #>   ..$ missingness          : num [1:100] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ tpa_total            : num [1:100] 38.7 39.5 45.1 37.3 31.5 ... #>   ..$ tpa_complete_features: num [1:100] 38.7 39.5 45.1 37.3 31.5 ... #>   ..$ outlier_count        : num [1:100] 0 0 1 2 3 2 0 0 0 2 ... #>   ..$ pc1                  : num [1:100] 1.087 0.418 -2.249 -0.619 2.231 ... #>   ..$ pc2                  : num [1:100] 0.321 0.573 0.131 0.749 -0.181 ... #>   ..$ pc3                  : num [1:100] 0.00338 1.58112 0.04016 0.5436 -0.9382 ... #>   ..$ pc4                  : num [1:100] 0.4766 0.1105 -0.6054 1.9563 0.0382 ... #>   ..$ pc5                  : num [1:100] 0.837 -1.154 -0.72 -1.659 -0.776 ... #>   ..$ pc6                  : num [1:100] 0.256 -0.256 0.763 -0.174 2.453 ... #>   ..$ pc7                  : num [1:100] -0.162 -0.103 -0.614 -0.669 1.494 ... #>   ..$ pc8                  : num [1:100] -0.2756 0.1153 0.0756 -2.1717 1.0719 ... #>   ..$ pc9                  : num [1:100] 0.577 1.961 -0.521 -0.463 0.236 ... #>   ..$ pc10                 : num [1:100] -1.466 -1.201 -1.457 1.769 0.349 ... #>   ..$ pc1_3_sd_outlier     : num [1:100] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ pc2_3_sd_outlier     : num [1:100] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ pc3_3_sd_outlier     : num [1:100] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ pc1_4_sd_outlier     : num [1:100] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ pc2_4_sd_outlier     : num [1:100] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ pc3_4_sd_outlier     : num [1:100] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ pc1_5_sd_outlier     : num [1:100] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ pc2_5_sd_outlier     : num [1:100] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ pc3_5_sd_outlier     : num [1:100] 0 0 0 0 0 0 0 0 0 0 ... #>   ..- attr(*, \"input_varexp\")= Named num [1:20] 0.0996 0.0884 0.0795 0.0691 0.0669 ... #>   .. ..- attr(*, \"names\")= chr [1:20] \"PC1\" \"PC2\" \"PC3\" \"PC4\" ... #>   ..- attr(*, \"input_num_pcs_scree\")= num 3 #>   ..- attr(*, \"input_num_pcs_parallel\")= int 14 #>   ..- attr(*, \"input_outlier_udist\")= num 1 #>  $ feature_summary:'data.frame': 20 obs. of  21 variables: #>   ..$ feature_id          : chr [1:20] \"metab_id_1\" \"metab_id_2\" \"metab_id_3\" \"metab_id_4\" ... #>   ..$ missingness         : num [1:20] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ outlier_count       : num [1:20] 5 0 10 5 11 7 7 0 10 0 ... #>   ..$ n                   : num [1:20] 100 100 100 100 100 100 100 100 100 100 ... #>   ..$ mean                : num [1:20] 0.511 0.521 0.488 0.464 0.521 ... #>   ..$ sd                  : num [1:20] 0.293 0.31 0.283 0.286 0.293 ... #>   ..$ median              : num [1:20] 0.53 0.547 0.504 0.466 0.547 ... #>   ..$ min                 : num [1:20] 0.000465 0.018364 0.001192 0.004107 0.003896 ... #>   ..$ max                 : num [1:20] 0.993 0.993 0.995 0.992 0.976 ... #>   ..$ range               : num [1:20] 0.992 0.975 0.994 0.988 0.972 ... #>   ..$ skew                : num [1:20] -0.123 -0.1496 -0.0365 0.0924 -0.2185 ... #>   ..$ kurtosis            : num [1:20] -1.23 -1.4 -1.11 -1.2 -1.16 ... #>   ..$ se                  : num [1:20] 0.0293 0.031 0.0283 0.0286 0.0293 ... #>   ..$ missing             : num [1:20] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ var                 : num [1:20] 0.0859 0.0959 0.0804 0.0819 0.0856 ... #>   ..$ disp_index          : num [1:20] 0.168 0.184 0.165 0.177 0.164 ... #>   ..$ coef_variance       : num [1:20] 0.574 0.594 0.58 0.617 0.561 ... #>   ..$ W                   : num [1:20] 0.949 0.924 0.963 0.954 0.945 ... #>   ..$ log10_W             : num [1:20] 0.744 0.834 0.749 0.833 0.782 ... #>   ..$ k                   : int [1:20] 1 2 3 4 5 6 7 8 9 10 ... #>   ..$ independent_features: logi [1:20] TRUE TRUE TRUE TRUE TRUE TRUE ... #>   ..- attr(*, \"input_tree\")=List of 7 #>   .. ..$ merge      : int [1:19, 1:2] -11 -2 -3 -13 -10 -8 -4 -12 -9 -1 ... #>   .. ..$ height     : num [1:19] 0.672 0.723 0.764 0.771 0.774 ... #>   .. ..$ order      : int [1:20] 3 6 4 5 8 15 10 19 7 1 ... #>   .. ..$ labels     : chr [1:20] \"metab_id_1\" \"metab_id_2\" \"metab_id_3\" \"metab_id_4\" ... #>   .. ..$ method     : chr \"complete\" #>   .. ..$ call       : language stats::hclust(d = dist_matrix, method = \"complete\") #>   .. ..$ dist.method: NULL #>   .. ..- attr(*, \"class\")= chr \"hclust\" #>   ..- attr(*, \"input_outlier_udist\")= num 1 #>   ..- attr(*, \"input_tree_cut_height\")= num 0.5"},{"path":"https://mrcieu.github.io/metaboprep/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Laura Corbin. Author. David Hughes. Author, maintainer. Nicholas Sunderland. Author. Matthew Lee. Author. Alec McKinlay. Author.","code":""},{"path":"https://mrcieu.github.io/metaboprep/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Corbin L, Hughes D, Sunderland N, Lee M, McKinlay (2025). metaboprep: Metabolomics data preparation processing pipeline. R package version 1.0.1, https://mrcieu.github.io/metaboprep/.","code":"@Manual{,   title = {metaboprep: Metabolomics data preparation and processing pipeline},   author = {Laura Corbin and David Hughes and Nicholas Sunderland and Matthew Lee and Alec McKinlay},   year = {2025},   note = {R package version 1.0.1},   url = {https://mrcieu.github.io/metaboprep/}, }"},{"path":"https://mrcieu.github.io/metaboprep/index.html","id":"metaboprep","dir":"","previous_headings":"","what":"Metabolomics data preparation and processing pipeline","title":"Metabolomics data preparation and processing pipeline","text":"goal metaboprep : Read processes (un)targeted metabolite data, saving datasets tab-delimited format use elsewhere Provide useful summary data form tab-delimited text file html report. Perform data filtering data set using standard pipeline according user-defined thresholds.","code":""},{"path":"https://mrcieu.github.io/metaboprep/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Metabolomics data preparation and processing pipeline","text":"can install development version metaboprep GitHub :","code":"# install.packages(\"pak\") pak::pak(\"MRCIEU/metaboprep\")"},{"path":[]},{"path":"https://mrcieu.github.io/metaboprep/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Metabolomics data preparation and processing pipeline","text":"basic example shows load data run metaboprep quality control pipeline.","code":"library(metaboprep)  # the data data_file <- system.file(\"extdata\", \"metabolon_v1_example.xlsx\", package = \"metaboprep2\")  # import data  dat <- read_metabolon_v1(system.file(\"extdata\", \"metabolon_v1_example.xlsx\", package = \"metaboprep\"))  # create the object m <- Metaboprep(data = dat$data[,,1], samples = dat$samples, features = dat$features)  # run QC m <- m |>   quality_control(source_layer = \"input\",                    sample_missingness  = 0.5,                    feature_missingness = 0.3,                    total_peak_area_sd  = 5,                    outlier_udist       = 5,                    outlier_treatment   = \"leave_be\",                    winsorize_quantile  = 1.0,                    tree_cut_height     = 0.5,                    pc_outlier_sd       = 5,                    sample_ids          = NULL,                    feature_ids         = NULL) #>  #> ── Starting Metabolite QC Process ────────────────────────────────────────────── #> ℹ Validating input parameters✔ Validating input parameters [4ms] #> ℹ Sample & Feature Summary Statistics for raw data✔ Sample & Feature Summary Statistics for raw data [544ms] #> ℹ Copying input data to new 'qc' data layer✔ Copying input data to new 'qc' data layer [12ms] #> ℹ Assessing for extreme sample missingness >=80% - excluding 0 sample(s)✔ Assessing for extreme sample missingness >=80% - excluding 0 sample(s) [8ms] #> ℹ Assessing for extreme feature missingness >=80% - excluding 0 feature(s)✔ Assessing for extreme feature missingness >=80% - excluding 0 feature(s) [8ms] #> ℹ Assessing for sample missingness at specified level of >=50% - excluding 0 sa…✔ Assessing for sample missingness at specified level of >=50% - excluding 0 sa… #> ℹ Assessing for feature missingness at specified level of >=30% - excluding 0 f…✔ Assessing for feature missingness at specified level of >=30% - excluding 0 f… #> ℹ Calculating total peak abundance outliers at +/- 5 Sdev - excluding 0 sample(…✔ Calculating total peak abundance outliers at +/- 5 Sdev - excluding 0 sample(… #> ℹ Running sample data PCA outlier analysis at +/- 5 Sdev✔ Running sample data PCA outlier analysis at +/- 5 Sdev [8ms] #> ℹ Sample PCA outlier analysis - re-identify feature independence and PC outlier…ℹ Sample PCA outlier analysis - re-identify feature independence and PC outlier…✔ Sample PCA outlier analysis - re-identify feature independence and PC outlier… #> ℹ Creating final QC dataset...✔ Creating final QC dataset... [524ms] #> ℹ Metabolite QC Process Completed✔ Metabolite QC Process Completed [8ms]  # view  m #> <metaboprep::Metaboprep> #>  @ data           : num [1:100, 1:100, 1:2] 11.03 10.8 11.47 10.45 9.24 ... #>  .. - attr(*, \"dimnames\")=List of 3 #>  ..  ..$ : chr [1:100] \"ind1\" \"ind2\" \"ind3\" \"ind4\" ... #>  ..  ..$ : chr [1:100] \"comp_id_123\" \"comp_id_124\" \"comp_id_125\" \"comp_id_126\" ... #>  ..  ..$ : chr [1:2] \"input\" \"qc\" #>  .. - attr(*, \"qc_sample_missingness\")= num 0.5 #>  .. - attr(*, \"qc_feature_missingness\")= num 0.3 #>  .. - attr(*, \"qc_total_peak_area_sd\")= num 5 #>  .. - attr(*, \"qc_outlier_udist\")= num 5 #>  .. - attr(*, \"qc_outlier_treatment\")= chr \"leave_be\" #>  .. - attr(*, \"qc_winsorize_quantile\")= num 1 #>  .. - attr(*, \"qc_tree_cut_height\")= num 0.5 #>  .. - attr(*, \"qc_pc_outlier_sd\")= num 5 #>  .. - attr(*, \"qc_features_exclude_but_keep\")= chr(0)  #>  @ samples        :'data.frame': 100 obs. of  8 variables: #>  .. $ sample_id      : chr  \"ind1\" \"ind2\" \"ind3\" \"ind4\" ... #>  .. $ neg            : chr  \"batch1\" \"batch1\" \"batch1\" \"batch1\" ... #>  .. $ pos            : chr  \"batch1\" \"batch1\" \"batch1\" \"batch1\" ... #>  .. $ run_day        : chr  \"day1\" \"day1\" \"day1\" \"day1\" ... #>  .. $ box_id         : chr  \"box1\" \"box1\" \"box1\" \"box1\" ... #>  .. $ lot            : chr  \"lot250\" \"lot250\" \"lot250\" \"lot250\" ... #>  .. $ reason_excluded: chr  NA NA NA NA ... #>  .. $ excluded       : logi  FALSE FALSE FALSE FALSE FALSE FALSE ... #>  @ features       :'data.frame': 100 obs. of  9 variables: #>  .. $ feature_id     : chr  \"comp_id_123\" \"comp_id_124\" \"comp_id_125\" \"comp_id_126\" ... #>  .. $ metabolite_id  : chr  \"met1\" \"met2\" \"met3\" \"met4\" ... #>  .. $ comp_id        : chr  \"123\" \"124\" \"125\" \"126\" ... #>  .. $ pathway        : chr  \"neg\" \"neg\" \"neg\" \"neg\" ... #>  .. $ platform       : chr  \"xenobiotic\" \"xenobiotic\" \"xenobiotic\" \"lipid\" ... #>  .. $ kegg           : chr  \"K100\" \"K100\" \"K100\" \"K200\" ... #>  .. $ hmdb           : chr  \"HMDB1\" \"HMDB2\" \"HMDB3\" \"HMDB4\" ... #>  .. $ reason_excluded: chr  NA NA NA NA ... #>  .. $ excluded       : logi  FALSE FALSE FALSE FALSE FALSE FALSE ... #>  @ exclusions     :List of 2 #>  .. $ samples :List of 5 #>  ..  ..$ user_excluded                    : chr(0)  #>  ..  ..$ extreme_sample_missingness       : chr(0)  #>  ..  ..$ user_defined_sample_missingness  : chr(0)  #>  ..  ..$ user_defined_sample_totalpeakarea: chr(0)  #>  ..  ..$ user_defined_sample_pca_outlier  : chr(0)  #>  .. $ features:List of 3 #>  ..  ..$ user_excluded                   : chr(0)  #>  ..  ..$ extreme_feature_missingness     : chr(0)  #>  ..  ..$ user_defined_feature_missingness: chr(0)  #>  @ feature_summary: num [1:20, 1:100, 1:2] 0 0 100 12.36 4.25 ... #>  .. - attr(*, \"dimnames\")=List of 3 #>  ..  ..$ : chr [1:20] \"missingness\" \"outlier_count\" \"n\" \"mean\" ... #>  ..  ..$ : chr [1:100] \"comp_id_123\" \"comp_id_124\" \"comp_id_125\" \"comp_id_126\" ... #>  ..  ..$ : chr [1:2] \"input\" \"qc\" #>  .. - attr(*, \"qc_tree\")=List of 7 #>  ..  ..$ merge      : int [1:97, 1:2] -76 -1 -85 -88 -64 -11 -2 -25 -77 -79 ... #>  ..  ..$ height     : num [1:97] 0.381 0.387 0.413 0.527 0.528 ... #>  ..  ..$ order      : int [1:98] 8 25 60 18 22 7 52 19 73 23 ... #>  ..  ..$ labels     : chr [1:98] \"comp_id_123\" \"comp_id_124\" \"comp_id_125\" \"comp_id_126\" ... #>  ..  ..$ method     : chr \"complete\" #>  ..  ..$ call       : language stats::hclust(d = dist_matrix, method = \"complete\") #>  ..  ..$ dist.method: NULL #>  ..  ..- attr(*, \"class\")= chr \"hclust\" #>  .. - attr(*, \"qc_outlier_udist\")= num 5 #>  .. - attr(*, \"qc_tree_cut_height\")= num 0.5 #>  @ sample_summary : num [1:100, 1:20, 1:2] 0.2 0.12 0.16 0 0.01 0.01 0 0.01 0 0 ... #>  .. - attr(*, \"dimnames\")=List of 3 #>  ..  ..$ : chr [1:100] \"ind1\" \"ind2\" \"ind3\" \"ind4\" ... #>  ..  ..$ : chr [1:20] \"missingness\" \"tpa_total\" \"tpa_complete_features\" \"outlier_count\" ... #>  ..  ..$ : chr [1:2] \"input\" \"qc\" #>  .. - attr(*, \"qc_varexp\")= Named num [1:95] 0.1001 0.0496 0.0448 0.0412 0.0388 ... #>  ..  ..- attr(*, \"names\")= chr [1:95] \"PC1\" \"PC2\" \"PC3\" \"PC4\" ... #>  .. - attr(*, \"qc_num_pcs_scree\")= num 2 #>  .. - attr(*, \"qc_num_pcs_parallel\")= int 13 #>  .. - attr(*, \"qc_outlier_udist\")= num 5  # view tree tree <- attr(m@feature_summary, \"qc_tree\") dend <- stats::as.dendrogram(tree) plot(dend)"},{"path":"https://mrcieu.github.io/metaboprep/reference/add_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Layer of Data (internal use) — add_layer","title":"Add a Layer of Data (internal use) — add_layer","text":"function adds additional layer data along third dimension existing 3D array (2D matrix/vector) stacking new layer data. ensures dimensions new layer match first two dimensions existing array matrix. mismatch row column names `force` parameter set `TRUE`, function align data filling missing values `NA`. used internally intended routine user use.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/add_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Layer of Data (internal use) — add_layer","text":"","code":"add_layer(current, layer, layer_name, force = FALSE)"},{"path":"https://mrcieu.github.io/metaboprep/reference/add_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Layer of Data (internal use) — add_layer","text":"current vector, matrix, 3D array representing current stack data. layer matrix array represents new layer data added. match dimensions first two dimensions `current`. layer_name character string specifying name new dimension 3rd axis. can used annotate new data layer. force logical value indicating whether force join create `NA` values row column names match `current` `layer`. Default `FALSE`.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/add_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a Layer of Data (internal use) — add_layer","text":"3D array added layer third dimension.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/available_data_formats.html","id":null,"dir":"Reference","previous_headings":"","what":"List Available Data Formats — available_data_formats","title":"List Available Data Formats — available_data_formats","text":"Scans package source files functions starting \"read_\" determine supported data formats.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/available_data_formats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Available Data Formats — available_data_formats","text":"","code":"available_data_formats()"},{"path":"https://mrcieu.github.io/metaboprep/reference/available_data_formats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Available Data Formats — available_data_formats","text":"named character vector available data formats.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/available_report_templates.html","id":null,"dir":"Reference","previous_headings":"","what":"List Available Report Templates — available_report_templates","title":"List Available Report Templates — available_report_templates","text":"Scans package source files available report templates write .","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/available_report_templates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Available Report Templates — available_report_templates","text":"","code":"available_report_templates()"},{"path":"https://mrcieu.github.io/metaboprep/reference/available_report_templates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Available Report Templates — available_report_templates","text":"character vector available report templates","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/batch_normalise.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch Normalisation — batch_normalise","title":"Batch Normalisation — batch_normalise","text":"Run batch normalisation based platform flag features data","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/batch_normalise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch Normalisation — batch_normalise","text":"","code":"batch_normalise(   metaboprep,   run_mode_col,   run_mode_colmap,   source_layer = \"input\",   dest_layer = \"batch_normalised\" )"},{"path":"https://mrcieu.github.io/metaboprep/reference/batch_normalise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch Normalisation — batch_normalise","text":"metaboprep object class Metaboprep run_mode_col character, column name features data containing run mode run_mode_colmap named character vector list, c(mode = \"mode col name samples\") source_layer character, data layer get data dest_layer character, data layer put data ","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/class_metaboprep.html","id":null,"dir":"Reference","previous_headings":"","what":"Metaboprep Object — class_metaboprep","title":"Metaboprep Object — class_metaboprep","text":"`Metaboprep` object container matrices metabolite data, along associated metadata. allows efficient storage manipulation data, supporting quality control, transformations, various analyses. object facilitates easy access data layers, sample feature summaries, outlier treatment, .","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/class_metaboprep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metaboprep Object — class_metaboprep","text":"","code":"Metaboprep(   data,   samples,   features,   exclusions = list(samples = list(user_excluded = character(),     extreme_sample_missingness = character(), user_defined_sample_missingness =     character(), user_defined_sample_totalpeakarea = character(),     user_defined_sample_pca_outlier = character()), features = list(user_excluded =     character(), extreme_feature_missingness = character(),     user_defined_feature_missingness = character())),   feature_summary = array(data = NA_real_, dim = c(0, 0, 0)),   sample_summary = array(data = NA_real_, dim = c(0, 0, 0)) )"},{"path":"https://mrcieu.github.io/metaboprep/reference/class_metaboprep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metaboprep Object — class_metaboprep","text":"data numeric matrix, data matrix containing metabolite values (set directly). samples data.frame, data frame containing sample-related information (set directly). features data.frame, data frame containing feature-related information (set directly). exclusions list, holds exclusion codes data masking (set directly). feature_summary numeric matrix, summary statistics features (set directly). sample_summary numeric matrix, summary statistics samples (set directly).","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/class_metaboprep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metaboprep Object — class_metaboprep","text":"object class `Metaboprep` (S7 class).","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/class_metaboprep.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Metaboprep Object — class_metaboprep","text":"data numeric matrix, metabolite data. samples data.frame, samples data frame features data.frame, features data frame exclusions list, exclusion codes (mask data). feature_summary numeric matrix, feature summary statistics. sample_summary numeric matrix, sample summary statistics.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/clean_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize Column or Feature Names — clean_names","title":"Standardize Column or Feature Names — clean_names","text":"Cleans character vector names replacing spaces underscores, removing special characters (`-`, `.`), replacing ` converting lowercase.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/clean_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize Column or Feature Names — clean_names","text":"","code":"clean_names(names)"},{"path":"https://mrcieu.github.io/metaboprep/reference/clean_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize Column or Feature Names — clean_names","text":"names `character vector` vector names cleaned.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/clean_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardize Column or Feature Names — clean_names","text":"`character vector` standardized version input names.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/clean_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardize Column or Feature Names — clean_names","text":"","code":"clean_names(c(\"Sample ID\", \"Feature-Name.1\", \"Concentration %\")) #> [1] \"sample_id\"         \"featurename_1\"     \"concentration_pct\" # Returns: c(\"sample_id\", \"featurename1\", \"concentration_pct\")"},{"path":"https://mrcieu.github.io/metaboprep/reference/continuous_power_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"continuous trait power analysis plot — continuous_power_plot","title":"continuous trait power analysis plot — continuous_power_plot","text":"function (1) identifies informative distribution effect power estimates given datas total sample size (2) returns summary plot.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/continuous_power_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"continuous trait power analysis plot — continuous_power_plot","text":"","code":"continuous_power_plot(mydata)"},{"path":"https://mrcieu.github.io/metaboprep/reference/continuous_power_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"continuous trait power analysis plot — continuous_power_plot","text":"mydata metabolite data matrix, samples rows","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/continuous_power_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"continuous trait power analysis plot — continuous_power_plot","text":"ggplot2 object","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/continuous_power_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"continuous trait power analysis plot — continuous_power_plot","text":"","code":"ex_data = matrix(NA, 1000, 2) continuous_power_plot( ex_data )"},{"path":"https://mrcieu.github.io/metaboprep/reference/cramerV.html","id":null,"dir":"Reference","previous_headings":"","what":"Cramer's V (phi) — cramerV","title":"Cramer's V (phi) — cramerV","text":"Calculates Cramer's V table nominal variables;              confidence intervals bootstrap. Function taken rcompanion Rpackage.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/cramerV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cramer's V (phi) — cramerV","text":"","code":"cramerV(   x,   y = NULL,   ci = FALSE,   conf = 0.95,   type = \"perc\",   R = 1000,   digits = 4,   bias.correct = FALSE,   reportIncomplete = FALSE,   verbose = FALSE,   ... )"},{"path":"https://mrcieu.github.io/metaboprep/reference/cramerV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cramer's V (phi) — cramerV","text":"x Either two-way table two-way matrix. Can also vector observations one dimension two-way table. y x vector, y vector observations second dimension two-way table. ci TRUE, returns confidence intervals bootstrap. May slow. conf level confidence interval. type type confidence interval use. Can \"norm\", \"basic\",               \"perc\", \"bca\". Passed boot.ci. R number replications use bootstrap. digits number significant digits output. bias.correct TRUE, bias correction applied. reportIncomplete FALSE (default), NA reported cases instances calculation statistic failing bootstrap procedure. verbose TRUE, prints additional statistics. ... Additional arguments passed chisq.test.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/cramerV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cramer's V (phi) — cramerV","text":"single statistic, Cramer's V.         small data frame consisting Cramer's V,         lower upper confidence limits.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/cramerV.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cramer's V (phi) — cramerV","text":"Cramer's V used measure association           two nominal variables, effect size           chi-square test association.  2 x 2 table,           absolute value phi statistic           Cramer's V. V always positive, type=\"perc\",           confidence interval           never cross zero. case,           confidence interval range           used statistical inference.           However, type=\"norm\", confidence interval           may cross zero. V close 0 large,           small counts,           confidence intervals           determined           method may reliable, procedure may fail.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/cramerV.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cramer's V (phi) — cramerV","text":"http://rcompanion.org/handbook/H_10.html","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/cramerV.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cramer's V (phi) — cramerV","text":"Salvatore Mangiafico, mangiafico@njaes.rutgers.edu","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/eval.power.binary.imbalanced.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate power for a binary variable in an imbalanced design — eval.power.binary.imbalanced","title":"Estimate power for a binary variable in an imbalanced design — eval.power.binary.imbalanced","text":"function allows estimate power binary variable given defined number case samples, control samples, effect size, significance threshold.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/eval.power.binary.imbalanced.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate power for a binary variable in an imbalanced design — eval.power.binary.imbalanced","text":"","code":"eval.power.binary.imbalanced(N_case, N_control, effect, alpha)"},{"path":"https://mrcieu.github.io/metaboprep/reference/eval.power.binary.imbalanced.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate power for a binary variable in an imbalanced design — eval.power.binary.imbalanced","text":"N_case numeric vector sample size cases N_control numeric vector sample size controls effect numeric vector effect size alpha numeric vector significance thresholds","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/eval.power.binary.imbalanced.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate power for a binary variable in an imbalanced design — eval.power.binary.imbalanced","text":"matrix paramater inputs power estimates returned matrix","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/eval.power.binary.imbalanced.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate power for a binary variable in an imbalanced design — eval.power.binary.imbalanced","text":"","code":"eval.power.binary.imbalanced( N_case = 1000,  N_control = 1000,  effect = 0.01,  alpha = 0.05 ) #>         N N_case N_control effect alpha power #> [1,] 2000   1000      1000   0.01  0.05 0.056  eval.power.binary.imbalanced( N_case = c(1000, 2000),  N_control = c(1000, 2000),  effect = 0.01,  alpha = 0.05 ) #>         N N_case N_control effect alpha power #> [1,] 2000   1000      1000   0.01  0.05 0.056 #> [2,] 4000   2000      2000   0.01  0.05 0.062"},{"path":"https://mrcieu.github.io/metaboprep/reference/eval.power.cont.html","id":null,"dir":"Reference","previous_headings":"","what":"estimate power for continuous variable — eval.power.cont","title":"estimate power for continuous variable — eval.power.cont","text":"function estimates power continuous variable given sample size, effect size, significance threshold, degrees freedom.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/eval.power.cont.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"estimate power for continuous variable — eval.power.cont","text":"","code":"eval.power.cont(N, n_coeff, effect, alpha)"},{"path":"https://mrcieu.github.io/metaboprep/reference/eval.power.cont.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"estimate power for continuous variable — eval.power.cont","text":"N Sample size n_coeff degrees freedom numerator effect effect size alpha significance level (Type 1 error)","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/eval.power.cont.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"estimate power for continuous variable — eval.power.cont","text":"","code":"eval.power.cont(N = 1000, n_coeff = 1, effect = 0.0025, alpha = 0.05) #>         N effect alpha power n_coeff #> [1,] 1000 0.0025  0.05 0.352       1"},{"path":"https://mrcieu.github.io/metaboprep/reference/export.html","id":null,"dir":"Reference","previous_headings":"","what":"Export Data from a Metaboprep Object — export","title":"Export Data from a Metaboprep Object — export","text":"Exports data `Metaboprep` object structured directory format. data layer, function creates subdirectory containing: - primary data matrix (`data.tsv`), - associated feature sample metadata (`features.tsv`, `samples.tsv`), - feature sample summaries (present, `feature_summary.tsv`, `sample_summary.tsv`), - serialized feature tree (present), - `config.yml` file additional metadata processing parameters.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/export.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export Data from a Metaboprep Object — export","text":"","code":"export(metaboprep, directory, format = \"metaboprep\", ...)"},{"path":"https://mrcieu.github.io/metaboprep/reference/export.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export Data from a Metaboprep Object — export","text":"metaboprep `Metaboprep` object containing data exported. directory character, string specifying path directory data written. format character, string specifying format exported data - one \"metaboprep\", \"comets\", \"metaboanalyst\". ... Arguments passed export_comets, export_metaboanalyst something something","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/export.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export Data from a Metaboprep Object — export","text":"`Metaboprep` object, invisibly, use pipes","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/export_comets.html","id":null,"dir":"Reference","previous_headings":"","what":"Export Data to `COMETS` format — export_comets","title":"Export Data to `COMETS` format — export_comets","text":"Export Data `COMETS` format","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/export_comets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export Data to `COMETS` format — export_comets","text":"","code":"export_comets(metaboprep, directory, something = \"foo\")"},{"path":"https://mrcieu.github.io/metaboprep/reference/export_comets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export Data to `COMETS` format — export_comets","text":"metaboprep `Metaboprep` object containing data exported. directory character, string specifying path directory data written. something something","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/export_comets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export Data to `COMETS` format — export_comets","text":"`Metaboprep` object, invisibly, use pipes","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/export_metaboanalyst.html","id":null,"dir":"Reference","previous_headings":"","what":"Export Data to `MetaboAnalyst` format — export_metaboanalyst","title":"Export Data to `MetaboAnalyst` format — export_metaboanalyst","text":"Export Data `MetaboAnalyst` format","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/export_metaboanalyst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export Data to `MetaboAnalyst` format — export_metaboanalyst","text":"","code":"export_metaboanalyst(metaboprep, directory, something = \"foo\")"},{"path":"https://mrcieu.github.io/metaboprep/reference/export_metaboanalyst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export Data to `MetaboAnalyst` format — export_metaboanalyst","text":"metaboprep `Metaboprep` object containing data exported. directory character, string specifying path directory data written. something something","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/export_metaboanalyst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export Data to `MetaboAnalyst` format — export_metaboanalyst","text":"`Metaboprep` object, invisibly, use pipes","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/export_metaboprep.html","id":null,"dir":"Reference","previous_headings":"","what":"Export Data to `Metaboprep` format — export_metaboprep","title":"Export Data to `Metaboprep` format — export_metaboprep","text":"Export Data `Metaboprep` format","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/export_metaboprep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export Data to `Metaboprep` format — export_metaboprep","text":"","code":"export_metaboprep(metaboprep, directory, ...)"},{"path":"https://mrcieu.github.io/metaboprep/reference/export_metaboprep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export Data to `Metaboprep` format — export_metaboprep","text":"metaboprep `Metaboprep` object containing data exported. directory character, string specifying path directory data written. ... parameters passed export_metaboprep(), export_comets(), export_metaboanalyst().","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/export_metaboprep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export Data to `Metaboprep` format — export_metaboprep","text":"`Metaboprep` object, invisibly, use pipes","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/feature_describe.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Statistics for Features — feature_describe","title":"Summary Statistics for Features — feature_describe","text":"function allows 'describe' metabolite features using describe() function psych package, well estimate variance, dispersion index, coeficent variation, shapiro's W-statistic.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/feature_describe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Statistics for Features — feature_describe","text":"","code":"feature_describe(data)"},{"path":"https://mrcieu.github.io/metaboprep/reference/feature_describe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Statistics for Features — feature_describe","text":"data matrix, metabolite data matrix. Samples row, metabolites columns","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/feature_describe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary Statistics for Features — feature_describe","text":"data frame summary statistics features (columns) matrix","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/feature_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Feature Summary Statistics — feature_summary","title":"Feature Summary Statistics — feature_summary","text":"function estimates feature statistics samples matrix metabolite features.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/feature_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feature Summary Statistics — feature_summary","text":"","code":"feature_summary(   metaboprep,   source_layer = \"input\",   outlier_udist = 5,   tree_cut_height = 0.5,   sample_ids = NULL,   feature_ids = NULL,   features_exclude = NULL,   output = \"data.frame\" )"},{"path":"https://mrcieu.github.io/metaboprep/reference/feature_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feature Summary Statistics — feature_summary","text":"metaboprep object class Metabolites source_layer character, data layer summarise outlier_udist unit distance SD IQR mean median estimate, respectively outliers identified . Default value 5. tree_cut_height numeric, threshold feature independence hierarchical clustering. Default 0.5. sample_ids character, vector sample ids work feature_ids character, vector feature ids work features_exclude character, vector feature id indicating features exclude sample PCA summary analysis keep data output character, type output, either 'object' return updated metaboprep object, 'data.frame' return data.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/find.PA.effect.sizes.2.sim.html","id":null,"dir":"Reference","previous_headings":"","what":"identify effect sizes — find.PA.effect.sizes.2.sim","title":"identify effect sizes — find.PA.effect.sizes.2.sim","text":"function estimates appropriate distribution effect sizes simulate power analysis.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/find.PA.effect.sizes.2.sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"identify effect sizes — find.PA.effect.sizes.2.sim","text":"","code":"find.PA.effect.sizes.2.sim(mydata)"},{"path":"https://mrcieu.github.io/metaboprep/reference/find.PA.effect.sizes.2.sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"identify effect sizes — find.PA.effect.sizes.2.sim","text":"mydata metabolite data matrix, samples rows","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/find.PA.effect.sizes.2.sim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"identify effect sizes — find.PA.effect.sizes.2.sim","text":"vector effect sizes","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/find.PA.effect.sizes.2.sim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"identify effect sizes — find.PA.effect.sizes.2.sim","text":"","code":"ex_data = sapply(1:10, function(x){ rnorm(250, 40, 5) }) find.PA.effect.sizes.2.sim(ex_data) #>  [1] 0.1401 0.1883 0.2365 0.2846 0.3328 0.3810 0.4292 0.4774 0.5255 0.5737 #> [11] 0.6219"},{"path":"https://mrcieu.github.io/metaboprep/reference/find.cont.effect.sizes.2.sim.html","id":null,"dir":"Reference","previous_headings":"","what":"identify continuos trait effect sizes — find.cont.effect.sizes.2.sim","title":"identify continuos trait effect sizes — find.cont.effect.sizes.2.sim","text":"function estimates appropriate distribution effect sizes simulate continuous trait power analysis.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/find.cont.effect.sizes.2.sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"identify continuos trait effect sizes — find.cont.effect.sizes.2.sim","text":"","code":"find.cont.effect.sizes.2.sim(mydata)"},{"path":"https://mrcieu.github.io/metaboprep/reference/find.cont.effect.sizes.2.sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"identify continuos trait effect sizes — find.cont.effect.sizes.2.sim","text":"mydata metabolite data matrix, samples rows","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/find.cont.effect.sizes.2.sim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"identify continuos trait effect sizes — find.cont.effect.sizes.2.sim","text":"vector effect sizes","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/find.cont.effect.sizes.2.sim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"identify continuos trait effect sizes — find.cont.effect.sizes.2.sim","text":"","code":"ex_data = sapply(1:10, function(x){ rnorm(250, 40, 5) }) find.cont.effect.sizes.2.sim(ex_data) #>  [1] 0.005001 0.014651 0.024301 0.033951 0.043601 0.053251 0.062901 0.072551 #>  [9] 0.082201 0.091851 0.101501"},{"path":"https://mrcieu.github.io/metaboprep/reference/generate_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Output Report — generate_report","title":"Generate Output Report — generate_report","text":"function writes output report","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/generate_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Output Report — generate_report","text":"","code":"generate_report(   metaboprep,   output_dir,   output_filename = NULL,   project = \"Project\",   format = \"pdf\",   template = \"qc_report\" )"},{"path":"https://mrcieu.github.io/metaboprep/reference/generate_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Output Report — generate_report","text":"metaboprep object class Metaboprep output_dir character, directory save output_filename character, default NULL .e. create input object project character, name current project format character, write either 'html' 'pdf' report template character, type report output current option \"qc_report\"","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/imbalanced_power_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"binary trait imbalanced design power analysis plot — imbalanced_power_plot","title":"binary trait imbalanced design power analysis plot — imbalanced_power_plot","text":"function (1) estimates informative distribution effect power estimates given datas total sample size, distribution imbalanced sample sizes (2) returns summary plot.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/imbalanced_power_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"binary trait imbalanced design power analysis plot — imbalanced_power_plot","text":"","code":"imbalanced_power_plot(mydata)"},{"path":"https://mrcieu.github.io/metaboprep/reference/imbalanced_power_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"binary trait imbalanced design power analysis plot — imbalanced_power_plot","text":"mydata numeric data matrix samples rows features columns","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/imbalanced_power_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"binary trait imbalanced design power analysis plot — imbalanced_power_plot","text":"ggplot2 object","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/imbalanced_power_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"binary trait imbalanced design power analysis plot — imbalanced_power_plot","text":"","code":"ex_data = matrix(NA, 1000, 2) imbalanced_power_plot( ex_data )"},{"path":"https://mrcieu.github.io/metaboprep/reference/missingness.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Missingness — missingness","title":"Estimate Missingness — missingness","text":"function estimates missingness matrix data provides option exclude certain columns features analysis, xenobiotics (high missingness rates) metabolomics data sets.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/missingness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Missingness — missingness","text":"","code":"missingness(data, by = \"row\")"},{"path":"https://mrcieu.github.io/metaboprep/reference/missingness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Missingness — missingness","text":"data matrix, numeric matrix samples rows features columns character, whether calculate missingness rows (samples) column (features)","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/missingness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Missingness — missingness","text":"data.frame, data frame missingness estimates sample/feature.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/multivariate_anova.html","id":null,"dir":"Reference","previous_headings":"","what":"multivariate analysis — multivariate_anova","title":"multivariate analysis — multivariate_anova","text":"function performs multivariate analysis dependent|response numerous independent|explanatory variable","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/multivariate_anova.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"multivariate analysis — multivariate_anova","text":"","code":"multivariate_anova(dep, indep_df)"},{"path":"https://mrcieu.github.io/metaboprep/reference/multivariate_anova.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"multivariate analysis — multivariate_anova","text":"dep vector dependent variable indep_df data frame independent variable","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/multivariate_anova.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"multivariate analysis — multivariate_anova","text":"ggplot2 table figure ","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/multivariate_anova.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"multivariate analysis — multivariate_anova","text":"","code":"cmat = matrix(1, 3, 3 ) cmat[1,] = c(1, 0.5, 0.3) cmat[2,] = c(0.5, 1, 0.25) cmat[3,] = c(0.3, 0.25, 1) ## simulate some correlated data (multivariable random normal) set.seed(1110) ex_data = MASS::mvrnorm(n = 250, mu = c(5, 45, 25), Sigma = cmat ) colnames(ex_data) = c(\"outcome\",\"age\",\"bmi\") multivariate_anova(dep = ex_data[,1], indep_df = ex_data[, 2:3])"},{"path":"https://mrcieu.github.io/metaboprep/reference/outlier_detection.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify indexes of outliers in data — outlier_detection","title":"Identify indexes of outliers in data — outlier_detection","text":"Given vector matrix, function returns vector matrix 0|1, structure 1 values indicating outliers.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/outlier_detection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify indexes of outliers in data — outlier_detection","text":"","code":"outlier_detection(data, nsd = 5, meansd = FALSE, by = \"column\")"},{"path":"https://mrcieu.github.io/metaboprep/reference/outlier_detection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify indexes of outliers in data — outlier_detection","text":"data matrix numerical values, samples row, features columns nsd unit distance SD IQR mean median estimate, respectively outliers identified . Default value 5. meansd set TRUE like estimate outliers using mean SD method; set FALSE like estimate medians inter quartile ranges. default FALSE. character, either 'column' compute along columns 'row' compute across rows. Irrelevant vectors.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/outlier_detection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify indexes of outliers in data — outlier_detection","text":"matrix 0 (sample outlier) 1 (outlier)","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify Outliers — outliers","title":"Identify Outliers — outliers","text":"function identifies outliers vector data SD units mean.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify Outliers — outliers","text":"","code":"outliers(x, nsd = 3)"},{"path":"https://mrcieu.github.io/metaboprep/reference/outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify Outliers — outliers","text":"x numerical vector data nsd number SD units mean used outlier cutoff.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/outliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify Outliers — outliers","text":"list object length three. (1) vector sample indexes indicating outliers, (2) lower outlier cuttoff value, (3) upper outlier cuttoff value.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/outliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify Outliers — outliers","text":"","code":"ex_data = rnbinom(500, mu = 40, size = 5) outliers(ex_data) #> [[1]] #> [1] 125 409 455 #>  #> [[2]] #> [1] -16.56037 #>  #> [[3]] #> [1] 95.07637 #>"},{"path":"https://mrcieu.github.io/metaboprep/reference/pc_and_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Principal Component Analysis — pc_and_outliers","title":"Principal Component Analysis — pc_and_outliers","text":"function performs principal component analysis. first, missing data imputed median. Subsequent derivation PC, median imputed PC data used identify number informative \"significant\" PC (1) acceleration analysis, (2) parrallel analysis. Finally number sample outliers determined 3, 4, 5 standard deviations mean top PCs determined acceleration factor analysis.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/pc_and_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Principal Component Analysis — pc_and_outliers","text":"","code":"pc_and_outliers(   metaboprep,   source_layer = \"input\",   sample_ids = NULL,   feature_ids = NULL )"},{"path":"https://mrcieu.github.io/metaboprep/reference/pc_and_outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Principal Component Analysis — pc_and_outliers","text":"metaboprep object class Metaboprep source_layer character, type/source data use sample_ids character, vector sample ids include, default NULL includes feature_ids character, vector feature ids include, default NULL includes ","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/pc_and_outliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Principal Component Analysis — pc_and_outliers","text":"data.frame","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/quality_control.html","id":null,"dir":"Reference","previous_headings":"","what":"Metabolite Quality Control — quality_control","title":"Metabolite Quality Control — quality_control","text":"function wrapper function performs key quality controls steps metabolomics data set. Key principles:  1. keep source underlying data  2. copy source data new data layer called qcing processing  3. build exclusion list, accumulating codes exclusion reasons  4. make adjustments needed destination copy data, flag exclusion list  5. copy final result data layer called post_qc  6. return Metabolites object newly populated data layers","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/quality_control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metabolite Quality Control — quality_control","text":"","code":"quality_control(   metaboprep,   source_layer = \"input\",   sample_missingness = 0.5,   feature_missingness = 0.5,   total_peak_area_sd = 5,   outlier_udist = 5,   outlier_treatment = \"leave_be\",   winsorize_quantile = 1,   tree_cut_height = 0.5,   pc_outlier_sd = 5,   sample_ids = NULL,   feature_ids = NULL,   features_exclude_but_keep = NULL )"},{"path":"https://mrcieu.github.io/metaboprep/reference/quality_control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metabolite Quality Control — quality_control","text":"metaboprep object class Metabolites source_layer character, data layer summarise sample_missingness numeric 0-1, percentage data missingness prompt exclusion sample feature_missingness numeric 0-1, percentage data missingness prompt exclusion feature total_peak_area_sd numeric, number TPA SD sample excluded outlier_udist unit distance SD IQR mean median estimate, respectively outliers identified . Default value 5. outlier_treatment character, handle outlier data values - options 'leave_be', 'turn_NA', 'winsorize' winsorize_quantile numeric, quantile winsorize , relevant 'outlier_treatment'='winsorize' tree_cut_height numeric, threshold feature independence hierarchical clustering. Default 0.5. pc_outlier_sd numeric, number PCA SD sample excluded sample_ids character, vector sample ids work feature_ids character, vector feature ids work features_exclude_but_keep character, vector feature id indicating features exclude sample PCA summary analysis keep data, name logical column features data indicating ","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/read_metabolon_v1.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Metabolon Data (format 1) — read_metabolon_v1","title":"Read Metabolon Data (format 1) — read_metabolon_v1","text":"Read Metabolon Data (format 1)","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/read_metabolon_v1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Metabolon Data (format 1) — read_metabolon_v1","text":"","code":"read_metabolon_v1(filepath)"},{"path":"https://mrcieu.github.io/metaboprep/reference/read_metabolon_v1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Metabolon Data (format 1) — read_metabolon_v1","text":"filepath character, commercial Metabolon excel sheet extension .xls .xlsx","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/read_metabolon_v1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Metabolon Data (format 1) — read_metabolon_v1","text":"list,  list(data = 3D matrix, samples = samples data.frame, features = features data.frame)","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/read_metabolon_v1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Metabolon Data (format 1) — read_metabolon_v1","text":"","code":"filepath <- system.file(\"extdata\", \"metabolon_v1_example.xlsx\", package = \"metaboprep2\") read_metabolon_v1(filepath) #> Error: Expected a commercial Metabolon excel sheet with extension .xls or .xlsx"},{"path":"https://mrcieu.github.io/metaboprep/reference/read_nightingale_v1.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Nightingale Data (format 1) — read_nightingale_v1","title":"Read Nightingale Data (format 1) — read_nightingale_v1","text":"Read Nightingale Data (format 1)","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/read_nightingale_v1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Nightingale Data (format 1) — read_nightingale_v1","text":"","code":"read_nightingale_v1(filepath)"},{"path":"https://mrcieu.github.io/metaboprep/reference/read_nightingale_v1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Nightingale Data (format 1) — read_nightingale_v1","text":"filepath character, commercial Nightingale excel sheet extension .xls .xlsx","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/read_nightingale_v1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Nightingale Data (format 1) — read_nightingale_v1","text":"list,  list(data = 3D matrix, samples = samples data.table, features = features data.table)","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/read_olink_v1.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and Process Olink NPX Data File — read_olink_v1","title":"Read and Process Olink NPX Data File — read_olink_v1","text":"function reads processes Olink NPX file long format. supports `.csv`, `.xls`, `.xlsx`, `.txt`, `.zip`, `.parquet` formats, returns list matrices metadata frames analysis.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/read_olink_v1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and Process Olink NPX Data File — read_olink_v1","text":"","code":"read_olink_v1(filepath)"},{"path":"https://mrcieu.github.io/metaboprep/reference/read_olink_v1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and Process Olink NPX Data File — read_olink_v1","text":"filepath string specifying path Olink NPX file.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/read_olink_v1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and Process Olink NPX Data File — read_olink_v1","text":"named list following elements: data matrix NPX values `SampleID` rows `OlinkID` columns, containing sample data. samples `data.frame` containing metadata samples. features `data.frame` containing feature-level metadata samples. controls matrix NPX values control samples. control_metadata `data.frame` containing metadata control samples.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/read_olink_v1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read and Process Olink NPX Data File — read_olink_v1","text":"function checks whether input data long format verifying presence duplicate `SampleID` values. also accommodates two variants Olink files: Files include `Sample_Type` column values `\"SAMPLE\"` `\"CONTROL\"`. Files use `SampleID` column label control samples (e.g., entries containing `\"CONTROL\"`). neither format detected, function stops error indicating data likely Olink.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/read_olink_v1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read and Process Olink NPX Data File — read_olink_v1","text":"","code":"if (FALSE) { # \\dontrun{ filepath <- system.file(\"extdata\", \"example_olink_data.txt\", package = \"metaboprep\") olink_data <- read_olink_v1(filepath) } # }"},{"path":"https://mrcieu.github.io/metaboprep/reference/read_somalogic.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Somalogic Data — read_somalogic","title":"Read Somalogic Data — read_somalogic","text":"Read Somalogic Data","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/read_somalogic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Somalogic Data — read_somalogic","text":"","code":"read_somalogic(filepath)"},{"path":"https://mrcieu.github.io/metaboprep/reference/read_somalogic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Somalogic Data — read_somalogic","text":"filepath character, commercial Somalogicfile","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/read_somalogic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Somalogic Data — read_somalogic","text":"list,  list(data = 3D matrix, samples = samples data.table, features = features data.table)","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/sample_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Summary Statistics — sample_summary","title":"Sample Summary Statistics — sample_summary","text":"Summarise sample data","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/sample_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Summary Statistics — sample_summary","text":"","code":"sample_summary(   metaboprep,   source_layer = \"input\",   outlier_udist = 5,   sample_ids = NULL,   feature_ids = NULL,   output = \"data.frame\" )"},{"path":"https://mrcieu.github.io/metaboprep/reference/sample_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample Summary Statistics — sample_summary","text":"metaboprep object class Metaboprep source_layer character, data layer summarise outlier_udist unit distance SD IQR mean median estimate, respectively outliers identified . Default value 5. sample_ids character, vector sample ids work feature_ids character, vector feature ids work output character, type output, either 'object' return updated metaboprep object, 'data.frame' return data.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/summarise.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Statistics — summarise","title":"Summary Statistics — summarise","text":"Summarise sample feature data","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/summarise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Statistics — summarise","text":"","code":"summarise(   metaboprep,   source_layer = \"input\",   outlier_udist = 5,   tree_cut_height = 0.5,   sample_ids = NULL,   feature_ids = NULL,   features_exclude = NULL,   output = \"data.frame\" )"},{"path":"https://mrcieu.github.io/metaboprep/reference/summarise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Statistics — summarise","text":"metaboprep object class Metaboprep source_layer character, data layer summarise outlier_udist unit distance SD IQR mean median estimate, respectively outliers identified . Default value 5. tree_cut_height numeric, threshold feature independence hierarchical clustering. Default 0.5. sample_ids character, vector sample ids work feature_ids character, vector feature ids work features_exclude character, vector feature id indicating features exclude sample PCA summary analysis keep data output character, type output, either 'object' return updated metaboprep object, 'data.frame' return data.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/total_peak_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimates total peak abundance — total_peak_area","title":"Estimates total peak abundance — total_peak_area","text":"function estimates total peak abundance|area numeric data matrix, (1) features (2) features complete data.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/total_peak_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimates total peak abundance — total_peak_area","text":"","code":"total_peak_area(data, ztransform = TRUE)"},{"path":"https://mrcieu.github.io/metaboprep/reference/total_peak_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimates total peak abundance — total_peak_area","text":"data matrix, metabolite data matrix. Samples rows, metabolites columns ztransform logical, feature data z-transformed absolute value minimum, mean shifted prior summing feature values. TRUE FALSE.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/total_peak_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimates total peak abundance — total_peak_area","text":"data frame estimates (1) total peak abundance (2) total peak abundance complete features samples","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/tree_and_independent_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify Independent Features in a Numeric Matrix — tree_and_independent_features","title":"Identify Independent Features in a Numeric Matrix — tree_and_independent_features","text":"function identifies independent features using Spearman's rho correlation distances, dendrogram tree cut step.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/tree_and_independent_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify Independent Features in a Numeric Matrix — tree_and_independent_features","text":"","code":"tree_and_independent_features(   data,   tree_cut_height = 0.5,   features_exclude = NULL )"},{"path":"https://mrcieu.github.io/metaboprep/reference/tree_and_independent_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify Independent Features in a Numeric Matrix — tree_and_independent_features","text":"data matrix, metabolite data matrix. samples row, metabolites columns tree_cut_height tree cut height. value 0.2 (1-Spearman's rho) equivalent saying features rho >= 0.8 independent. features_exclude character, vector feature id indicating features exclude sample PCA summary analysis keep data","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/tree_and_independent_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify Independent Features in a Numeric Matrix — tree_and_independent_features","text":"list object (1) hclust object, (2) independent features, (3) data frame feature ids, k-cluster identifiers, binary identifier independent features","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/variable_by_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2 violin plot — variable_by_factor","title":"ggplot2 violin plot — variable_by_factor","text":"function performs univariate linear analysis dependent independent variable generates viloin box plot illustrate associated structure.","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/variable_by_factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2 violin plot — variable_by_factor","text":"","code":"variable_by_factor(   dep,   indep,   dep_name = \"dependent\",   indep_name = \"independent\",   orderfactor = TRUE,   violin = TRUE )"},{"path":"https://mrcieu.github.io/metaboprep/reference/variable_by_factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2 violin plot — variable_by_factor","text":"dep vector dependent variable indep vector independent variable dep_name name dependent variable indep_name name independent variable orderfactor order factors alphebetically violin box plot violin plot. violin = TRUE default","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/variable_by_factor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2 violin plot — variable_by_factor","text":"ggplot2 object","code":""},{"path":"https://mrcieu.github.io/metaboprep/reference/variable_by_factor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2 violin plot — variable_by_factor","text":"","code":"x = c( rnorm(20, 10, 2), rnorm(20, 20, 2) ) y = as.factor( c( rep(\"A\", 20), rep(\"B\", 20)  ) ) variable_by_factor(dep = x , indep = y, dep_name = \"expression\", indep_name = \"species\" )"}]
